#These are the two libraries that we will use for this program
import RPi.GPIO as GPIO
import time

GPIO.setmode(GPIO.BCM)

rightEnable = 17
rightDir = 22
rightStep = 27

leftEnable = 5
leftDir = 26
leftStep = 6

trigger = 18
echo =  24

GPIO.setwarnings(False)

GPIO.setup(rightStep, GPIO.OUT)
GPIO.setup(leftStep, GPIO.OUT)
GPIO.setup(rightDir, GPIO.OUT)
GPIO.setup(leftDir, GPIO.OUT)
GPIO.setup(rightEnable, GPIO.OUT)
GPIO.setup(leftEnable,GPIO.OUT)
GPIO.setup(trigger, GPIO.OUT)
GPIO.setup(echo, GPIO.IN)

inchSteps = 59 
delay = .0025
fwd = 1
bwd = 0

def smartStop():
    

    GPIO.output(trigger, True)
    
    time.sleep(0.0025)
    
    GPIO.output(trigger, False)
    

    print ("Reading Measurement...")
    
    
    startTime = time.time()
    stopTime = time.time()
    

    while GPIO.input(echo) == 0:
        startTime = time.time()
    
 
    while GPIO.input(echo) == 1:
        stopTime = time.time()
    
    timeElasped = stopTime - startTime
        
    distance = (6800 * timeElasped)
    
    print("Obstacle at :")
    print(distance)
    isobstacle = False
    if (distance < 10):
        print(distance)
        isobstacle = True
    
            
    return isobstacle

def move(direction, inches):
   
    GPIO.output(rightEnable, GPIO.LOW)
    GPIO.output(leftEnable, GPIO.LOW)
    GPIO.output(rightDir, direction)
    GPIO.output(leftDir, direction)
    
 
    numOfSteps = inches * inchSteps;
    
    
    for x in range(numOfSteps):
        GPIO.output(rightStep, GPIO.HIGH)
        GPIO.output(leftStep, GPIO.HIGH)
        time.sleep(delay)
        GPIO.output(rightStep, GPIO.LOW)
        GPIO.output(leftStep, GPIO.LOW)
        #time.sleep(delay)
        if(x%200==0):
            if(smartStop()):
                print("loop broken")
                break
        else:
            time.sleep(delay)
    time.sleep(1)
   
    GPIO.output(rightEnable, GPIO.HIGH)
    GPIO.output(leftEnable, GPIO.HIGH)


"""
def turn(direction, degrees):
    #distance = degrees * 1.2
    #steps = distance/1.5
    distance = degrees * 1.2
    steps = distance/0.4
    
    GPIO.output(rightEnable, GPIO.LOW)
    GPIO.output(leftEnable, GPIO.LOW)
    if direction:  
        GPIO.output(rightDir, 1)
        GPIO.output(leftDir, 0)
    else:
        GPIO.output(rightDir, 0)
        GPIO.output(leftDir, 1)
        
    for x in range(int(steps)):
        GPIO.output(rightStep, GPIO.HIGH)
        GPIO.output(leftStep, GPIO.HIGH)
        sleep(delay)
        GPIO.output(rightStep, GPIO.LOW)
        GPIO.output(leftStep, GPIO.LOW)
        sleep(delay)

    Finally, let's disable the motors so they don't
    have to hold the current from the battery
    sleep(1)
    GPIO.output(rightEnable, GPIO.HIGH)
    GPIO.output(leftEnable, GPIO.HIGH)

"""

try:
    if __name__ == "__main__":
        
        
        move(True,120)
    

except KeyboardInterrupt:
    GPIO.cleanup()

    
